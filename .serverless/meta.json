{
  "/Users/ak/IdeaProjects/MMATrainingWebsite/serverless.yml": {
    "versionFramework": "4.6.2",
    "servicePath": "/Users/ak/IdeaProjects/MMATrainingWebsite/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "demaris",
      "app": "gloryyouthtest",
      "service": "gloryyouthserverless",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "CreateProfileLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-createProfile"
              }
            },
            "GetProfileLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-getProfile"
              }
            },
            "UpdateProfileLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-updateProfile"
              }
            },
            "DeleteProfileLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-deleteProfile"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "gloryyouthserverless",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gloryyouthserverless-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gloryyouthserverless-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "gloryyouthserverless",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CreateProfileLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
                  "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
                },
                "Handler": "backend/src/handlers/profile.createProfile",
                "Runtime": "nodejs20.x",
                "FunctionName": "gloryyouthserverless-dev-createProfile",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateProfileLogGroup"
              ]
            },
            "GetProfileLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
                  "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
                },
                "Handler": "backend/src/handlers/profile.getProfile",
                "Runtime": "nodejs20.x",
                "FunctionName": "gloryyouthserverless-dev-getProfile",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetProfileLogGroup"
              ]
            },
            "UpdateProfileLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
                  "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
                },
                "Handler": "backend/src/handlers/profile.updateProfile",
                "Runtime": "nodejs20.x",
                "FunctionName": "gloryyouthserverless-dev-updateProfile",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateProfileLogGroup"
              ]
            },
            "DeleteProfileLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
                  "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
                },
                "Handler": "backend/src/handlers/profile.deleteProfile",
                "Runtime": "nodejs20.x",
                "FunctionName": "gloryyouthserverless-dev-deleteProfile",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteProfileLogGroup"
              ]
            },
            "CreateProfileLambdaVersiontiVVVpq8ziGTUvEpvaqtqe1BQY3vSWAeVoyc6zioPA": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateProfileLambdaFunction"
                },
                "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
              }
            },
            "GetProfileLambdaVersionC123SGb6uwsiyiQ7gLV3pZxYiRLnZWgqpEnFDpT4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetProfileLambdaFunction"
                },
                "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
              }
            },
            "UpdateProfileLambdaVersionLKrgDgTRxccIAIT2o5D3HUB7SuFFo0tZELt7vUvihts": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateProfileLambdaFunction"
                },
                "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
              }
            },
            "DeleteProfileLambdaVersionaH6pl53C2BmjCml8pHuYldKahP7HBI0lPKWW0tWMjn8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteProfileLambdaFunction"
                },
                "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-gloryyouthserverless",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceProfile": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "profile",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceProfileUseridVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceProfile"
                },
                "PathPart": "{userId}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodProfileUseridVarPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProfileUseridVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateProfileLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateProfileLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodProfileUseridVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProfileUseridVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetProfileLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetProfileLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodProfileUseridVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProfileUseridVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateProfileLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UpdateProfileLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodProfileUseridVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProfileUseridVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteProfileLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteProfileLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1739167224634": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodProfileUseridVarPost",
                "ApiGatewayMethodProfileUseridVarGet",
                "ApiGatewayMethodProfileUseridVarPut",
                "ApiGatewayMethodProfileUseridVarDelete"
              ]
            },
            "CreateProfileLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateProfileLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetProfileLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetProfileLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateProfileLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateProfileLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteProfileLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteProfileLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CognitoUserPoolUseast1ohvGyWSZf": {
              "Type": "AWS::Cognito::UserPool",
              "Properties": {
                "UserPoolName": "us-east-1_ohvGyWSZf",
                "LambdaConfig": {
                  "PostConfirmation": {
                    "Fn::GetAtt": [
                      "CreateProfileLambdaFunction",
                      "Arn"
                    ]
                  }
                }
              },
              "DependsOn": [
                "CreateProfileLambdaFunction"
              ]
            },
            "CreateProfileLambdaPermissionCognitoUserPoolUseast1ohvGyWSZfTriggerSourcePostConfirmation": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateProfileLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "cognito-idp.amazonaws.com",
                "SourceArn": {
                  "Fn::GetAtt": [
                    "CognitoUserPoolUseast1ohvGyWSZf",
                    "Arn"
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
              "Export": {
                "Name": "sls-gloryyouthserverless-dev-ServerlessDeploymentBucketName"
              }
            },
            "CreateProfileLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateProfileLambdaVersiontiVVVpq8ziGTUvEpvaqtqe1BQY3vSWAeVoyc6zioPA"
              },
              "Export": {
                "Name": "sls-gloryyouthserverless-dev-CreateProfileLambdaFunctionQualifiedArn"
              }
            },
            "GetProfileLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetProfileLambdaVersionC123SGb6uwsiyiQ7gLV3pZxYiRLnZWgqpEnFDpT4"
              },
              "Export": {
                "Name": "sls-gloryyouthserverless-dev-GetProfileLambdaFunctionQualifiedArn"
              }
            },
            "UpdateProfileLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateProfileLambdaVersionLKrgDgTRxccIAIT2o5D3HUB7SuFFo0tZELt7vUvihts"
              },
              "Export": {
                "Name": "sls-gloryyouthserverless-dev-UpdateProfileLambdaFunctionQualifiedArn"
              }
            },
            "DeleteProfileLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteProfileLambdaVersionaH6pl53C2BmjCml8pHuYldKahP7HBI0lPKWW0tWMjn8"
              },
              "Export": {
                "Name": "sls-gloryyouthserverless-dev-DeleteProfileLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-gloryyouthserverless-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "plugins": [
        "serverless-offline"
      ],
      "functions": {
        "createProfile": {
          "handler": "backend/src/handlers/profile.createProfile",
          "events": [
            {
              "http": {
                "path": "profile/{userId}",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            },
            {
              "cognitoUserPool": {
                "pool": "us-east-1_ohvGyWSZf",
                "trigger": "PostConfirmation"
              }
            }
          ],
          "name": "gloryyouthserverless-dev-createProfile",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CreateProfileLambdaVersiontiVVVpq8ziGTUvEpvaqtqe1BQY3vSWAeVoyc6zioPA"
        },
        "getProfile": {
          "handler": "backend/src/handlers/profile.getProfile",
          "events": [
            {
              "http": {
                "path": "profile/{userId}",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "gloryyouthserverless-dev-getProfile",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetProfileLambdaVersionC123SGb6uwsiyiQ7gLV3pZxYiRLnZWgqpEnFDpT4"
        },
        "updateProfile": {
          "handler": "backend/src/handlers/profile.updateProfile",
          "events": [
            {
              "http": {
                "path": "profile/{userId}",
                "method": "put",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "gloryyouthserverless-dev-updateProfile",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UpdateProfileLambdaVersionLKrgDgTRxccIAIT2o5D3HUB7SuFFo0tZELt7vUvihts"
        },
        "deleteProfile": {
          "handler": "backend/src/handlers/profile.deleteProfile",
          "events": [
            {
              "http": {
                "path": "profile/{userId}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "gloryyouthserverless-dev-deleteProfile",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "DeleteProfileLambdaVersionaH6pl53C2BmjCml8pHuYldKahP7HBI0lPKWW0tWMjn8"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CreateProfileLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-createProfile"
            }
          },
          "GetProfileLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-getProfile"
            }
          },
          "UpdateProfileLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-updateProfile"
            }
          },
          "DeleteProfileLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-deleteProfile"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "gloryyouthserverless",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gloryyouthserverless-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gloryyouthserverless-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "gloryyouthserverless",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateProfileLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
                "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
              },
              "Handler": "backend/src/handlers/profile.createProfile",
              "Runtime": "nodejs20.x",
              "FunctionName": "gloryyouthserverless-dev-createProfile",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateProfileLogGroup"
            ]
          },
          "GetProfileLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
                "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
              },
              "Handler": "backend/src/handlers/profile.getProfile",
              "Runtime": "nodejs20.x",
              "FunctionName": "gloryyouthserverless-dev-getProfile",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetProfileLogGroup"
            ]
          },
          "UpdateProfileLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
                "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
              },
              "Handler": "backend/src/handlers/profile.updateProfile",
              "Runtime": "nodejs20.x",
              "FunctionName": "gloryyouthserverless-dev-updateProfile",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateProfileLogGroup"
            ]
          },
          "DeleteProfileLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
                "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
              },
              "Handler": "backend/src/handlers/profile.deleteProfile",
              "Runtime": "nodejs20.x",
              "FunctionName": "gloryyouthserverless-dev-deleteProfile",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteProfileLogGroup"
            ]
          },
          "CreateProfileLambdaVersiontiVVVpq8ziGTUvEpvaqtqe1BQY3vSWAeVoyc6zioPA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateProfileLambdaFunction"
              },
              "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
            }
          },
          "GetProfileLambdaVersionC123SGb6uwsiyiQ7gLV3pZxYiRLnZWgqpEnFDpT4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetProfileLambdaFunction"
              },
              "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
            }
          },
          "UpdateProfileLambdaVersionLKrgDgTRxccIAIT2o5D3HUB7SuFFo0tZELt7vUvihts": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateProfileLambdaFunction"
              },
              "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
            }
          },
          "DeleteProfileLambdaVersionaH6pl53C2BmjCml8pHuYldKahP7HBI0lPKWW0tWMjn8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteProfileLambdaFunction"
              },
              "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-gloryyouthserverless",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceProfile": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "profile",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceProfileUseridVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceProfile"
              },
              "PathPart": "{userId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodProfileUseridVarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProfileUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateProfileLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateProfileLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodProfileUseridVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProfileUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetProfileLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetProfileLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodProfileUseridVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProfileUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateProfileLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateProfileLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodProfileUseridVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProfileUseridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteProfileLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteProfileLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1739167224634": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodProfileUseridVarPost",
              "ApiGatewayMethodProfileUseridVarGet",
              "ApiGatewayMethodProfileUseridVarPut",
              "ApiGatewayMethodProfileUseridVarDelete"
            ]
          },
          "CreateProfileLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateProfileLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetProfileLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetProfileLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateProfileLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateProfileLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteProfileLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteProfileLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CognitoUserPoolUseast1ohvGyWSZf": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "us-east-1_ohvGyWSZf",
              "LambdaConfig": {
                "PostConfirmation": {
                  "Fn::GetAtt": [
                    "CreateProfileLambdaFunction",
                    "Arn"
                  ]
                }
              }
            },
            "DependsOn": [
              "CreateProfileLambdaFunction"
            ]
          },
          "CreateProfileLambdaPermissionCognitoUserPoolUseast1ohvGyWSZfTriggerSourcePostConfirmation": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateProfileLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "cognito-idp.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CognitoUserPoolUseast1ohvGyWSZf",
                  "Arn"
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
            "Export": {
              "Name": "sls-gloryyouthserverless-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreateProfileLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateProfileLambdaVersiontiVVVpq8ziGTUvEpvaqtqe1BQY3vSWAeVoyc6zioPA"
            },
            "Export": {
              "Name": "sls-gloryyouthserverless-dev-CreateProfileLambdaFunctionQualifiedArn"
            }
          },
          "GetProfileLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetProfileLambdaVersionC123SGb6uwsiyiQ7gLV3pZxYiRLnZWgqpEnFDpT4"
            },
            "Export": {
              "Name": "sls-gloryyouthserverless-dev-GetProfileLambdaFunctionQualifiedArn"
            }
          },
          "UpdateProfileLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateProfileLambdaVersionLKrgDgTRxccIAIT2o5D3HUB7SuFFo0tZELt7vUvihts"
            },
            "Export": {
              "Name": "sls-gloryyouthserverless-dev-UpdateProfileLambdaFunctionQualifiedArn"
            }
          },
          "DeleteProfileLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteProfileLambdaVersionaH6pl53C2BmjCml8pHuYldKahP7HBI0lPKWW0tWMjn8"
            },
            "Export": {
              "Name": "sls-gloryyouthserverless-dev-DeleteProfileLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-gloryyouthserverless-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "t4cj7nncrMHFdX57Vd",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: demaris\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: gloryyouthtest\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: gloryyouthserverless\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  stage: dev\n\nplugins:\n  - serverless-offline\n\nfunctions:\n  createProfile:\n    handler: backend/src/handlers/profile.createProfile\n    events:\n      - http:\n          path: profile/{userId}\n          method: post\n      - cognitoUserPool:\n          pool: us-east-1_ohvGyWSZf\n          trigger: PostConfirmation\n\n  getProfile:\n      handler: backend/src/handlers/profile.getProfile\n      events:\n        - http:\n            path: profile/{userId}\n            method: get\n\n  updateProfile:\n      handler: backend/src/handlers/profile.updateProfile\n      events:\n        - http:\n            path: profile/{userId}\n            method: put\n\n  deleteProfile:\n      handler: backend/src/handlers/profile.deleteProfile\n      events:\n        - http:\n            path: profile/{userId}\n            method: delete",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "dd814b74-6da5-4a26-85ab-ce39727f2db2",
    "orgName": "demaris",
    "userId": "5J5cHpPXtjgxzhRyyH",
    "userName": "demaris",
    "serviceProviderAwsAccountId": "783764585797",
    "serviceProviderAwsCfStackName": "gloryyouthserverless-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:783764585797:stack/gloryyouthserverless-dev/452394f0-df8c-11ef-a1a7-0e12b1742aa3",
    "serviceProviderAwsCfStackCreated": "2025-01-31T04:31:42.133Z",
    "serviceProviderAwsCfStackUpdated": "2025-02-10T05:35:46.130Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CreateProfileLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:783764585797:function:gloryyouthserverless-dev-createProfile:6",
        "Description": "Current Lambda function version",
        "ExportName": "sls-gloryyouthserverless-dev-CreateProfileLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateProfileLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:783764585797:function:gloryyouthserverless-dev-updateProfile:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-gloryyouthserverless-dev-UpdateProfileLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetProfileLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:783764585797:function:gloryyouthserverless-dev-getProfile:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-gloryyouthserverless-dev-GetProfileLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteProfileLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:783764585797:function:gloryyouthserverless-dev-deleteProfile:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-gloryyouthserverless-dev-DeleteProfileLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://6lp4x2hut3.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-gloryyouthserverless-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
        "ExportName": "sls-gloryyouthserverless-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "CreateProfileLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-createProfile"
          }
        },
        "GetProfileLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-getProfile"
          }
        },
        "UpdateProfileLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-updateProfile"
          }
        },
        "DeleteProfileLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/gloryyouthserverless-dev-deleteProfile"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "gloryyouthserverless",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gloryyouthserverless-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gloryyouthserverless-dev*:*:*"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "gloryyouthserverless",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "CreateProfileLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
              "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
            },
            "Handler": "backend/src/handlers/profile.createProfile",
            "Runtime": "nodejs20.x",
            "FunctionName": "gloryyouthserverless-dev-createProfile",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "CreateProfileLogGroup"
          ]
        },
        "GetProfileLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
              "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
            },
            "Handler": "backend/src/handlers/profile.getProfile",
            "Runtime": "nodejs20.x",
            "FunctionName": "gloryyouthserverless-dev-getProfile",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetProfileLogGroup"
          ]
        },
        "UpdateProfileLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
              "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
            },
            "Handler": "backend/src/handlers/profile.updateProfile",
            "Runtime": "nodejs20.x",
            "FunctionName": "gloryyouthserverless-dev-updateProfile",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "UpdateProfileLogGroup"
          ]
        },
        "DeleteProfileLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
              "S3Key": "serverless/gloryyouthserverless/dev/1739167242989-2025-02-10T06:00:42.989Z/gloryyouthserverless.zip"
            },
            "Handler": "backend/src/handlers/profile.deleteProfile",
            "Runtime": "nodejs20.x",
            "FunctionName": "gloryyouthserverless-dev-deleteProfile",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "DeleteProfileLogGroup"
          ]
        },
        "CreateProfileLambdaVersiontiVVVpq8ziGTUvEpvaqtqe1BQY3vSWAeVoyc6zioPA": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CreateProfileLambdaFunction"
            },
            "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
          }
        },
        "GetProfileLambdaVersionC123SGb6uwsiyiQ7gLV3pZxYiRLnZWgqpEnFDpT4": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetProfileLambdaFunction"
            },
            "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
          }
        },
        "UpdateProfileLambdaVersionLKrgDgTRxccIAIT2o5D3HUB7SuFFo0tZELt7vUvihts": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "UpdateProfileLambdaFunction"
            },
            "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
          }
        },
        "DeleteProfileLambdaVersionaH6pl53C2BmjCml8pHuYldKahP7HBI0lPKWW0tWMjn8": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "DeleteProfileLambdaFunction"
            },
            "CodeSha256": "7YjiievoMnvCD1cdH+/BeZZdewt1jkWBue4vHgubQqI="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-gloryyouthserverless",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceProfile": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "profile",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceProfileUseridVar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceProfile"
            },
            "PathPart": "{userId}",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodProfileUseridVarPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceProfileUseridVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "CreateProfileLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "CreateProfileLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodProfileUseridVarGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceProfileUseridVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "GetProfileLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "GetProfileLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodProfileUseridVarPut": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "PUT",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceProfileUseridVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "UpdateProfileLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "UpdateProfileLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodProfileUseridVarDelete": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "DELETE",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceProfileUseridVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "DeleteProfileLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "DeleteProfileLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1739167224634": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodProfileUseridVarPost",
            "ApiGatewayMethodProfileUseridVarGet",
            "ApiGatewayMethodProfileUseridVarPut",
            "ApiGatewayMethodProfileUseridVarDelete"
          ]
        },
        "CreateProfileLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CreateProfileLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "GetProfileLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetProfileLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "UpdateProfileLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "UpdateProfileLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "DeleteProfileLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "DeleteProfileLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "CognitoUserPoolUseast1ohvGyWSZf": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "us-east-1_ohvGyWSZf",
            "LambdaConfig": {
              "PostConfirmation": {
                "Fn::GetAtt": [
                  "CreateProfileLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "DependsOn": [
            "CreateProfileLambdaFunction"
          ]
        },
        "CreateProfileLambdaPermissionCognitoUserPoolUseast1ohvGyWSZfTriggerSourcePostConfirmation": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CreateProfileLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "cognito-idp.amazonaws.com",
            "SourceArn": {
              "Fn::GetAtt": [
                "CognitoUserPoolUseast1ohvGyWSZf",
                "Arn"
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-1-4f9e1b77-45d9",
          "Export": {
            "Name": "sls-gloryyouthserverless-dev-ServerlessDeploymentBucketName"
          }
        },
        "CreateProfileLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CreateProfileLambdaVersiontiVVVpq8ziGTUvEpvaqtqe1BQY3vSWAeVoyc6zioPA"
          },
          "Export": {
            "Name": "sls-gloryyouthserverless-dev-CreateProfileLambdaFunctionQualifiedArn"
          }
        },
        "GetProfileLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetProfileLambdaVersionC123SGb6uwsiyiQ7gLV3pZxYiRLnZWgqpEnFDpT4"
          },
          "Export": {
            "Name": "sls-gloryyouthserverless-dev-GetProfileLambdaFunctionQualifiedArn"
          }
        },
        "UpdateProfileLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "UpdateProfileLambdaVersionLKrgDgTRxccIAIT2o5D3HUB7SuFFo0tZELt7vUvihts"
          },
          "Export": {
            "Name": "sls-gloryyouthserverless-dev-UpdateProfileLambdaFunctionQualifiedArn"
          }
        },
        "DeleteProfileLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "DeleteProfileLambdaVersionaH6pl53C2BmjCml8pHuYldKahP7HBI0lPKWW0tWMjn8"
          },
          "Export": {
            "Name": "sls-gloryyouthserverless-dev-DeleteProfileLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-gloryyouthserverless-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}